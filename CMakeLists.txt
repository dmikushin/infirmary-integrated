cmake_minimum_required(VERSION 3.7.2)

project(tanjera)

set(PROJECT_VERSION_MAJOR 0)
set(PROJECT_VERSION_MINOR 1)
set(PROJECT_VERSION_PATCH 0)

add_custom_target(${PROJECT_NAME} ALL
	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}.sln
	COMMAND dotnet build ${PROJECT_NAME}/${PROJECT_NAME}.sln -o ${CMAKE_CURRENT_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	COMMENT "Building solution ${PROJECT_NAME}")

add_custom_command(
	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}.sln
	COMMAND dotnet new sln -o ${PROJECT_NAME}
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	COMMENT "Creating solution ${PROJECT_NAME}")

add_custom_command(
	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
	COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
	COMMENT "Creating directory ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}")

file(GLOB SUBPROJECT_NAMES RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}/src/" "${CMAKE_CURRENT_SOURCE_DIR}/src/*")
foreach(SUBPROJECT_NAME ${SUBPROJECT_NAMES})
	add_custom_command(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/src/${SUBPROJECT_NAME}/${SUBPROJECT_NAME}.csproj
		DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
		COMMAND	dotnet new classlib -o ${PROJECT_NAME}/src/${SUBPROJECT_NAME}
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
		COMMENT "Creating project ${SUBPROJECT_NAME}")
	add_custom_target(${SUBPROJECT_NAME}
		DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/src/${SUBPROJECT_NAME}/${SUBPROJECT_NAME}.csproj
		DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}.sln
		COMMAND dotnet sln add src/${SUBPROJECT_NAME}/${SUBPROJECT_NAME}.csproj
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
		COMMENT "Adding project ${SUBPROJECT_NAME}")
	add_dependencies(${PROJECT_NAME} ${SUBPROJECT_NAME})
endforeach()

#dotnet add src/Core package PdfSharp

